DROP TABLE IF EXISTS requests_for_events, compilations_events, compilations, categories, events, locations, users;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  email VARCHAR(254) NOT NULL UNIQUE,
  name VARCHAR(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS locations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  latitude FLOAT8 NOT NULL,
  longitude FLOAT8 NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  annotation VARCHAR(2000) NOT NULL,
  category_id BIGINT NOT NULL REFERENCES categories(id) ON DELETE CASCADE ON UPDATE CASCADE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  description TEXT,
  event_date TIMESTAMP NOT NULL,
  initiator_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
  location_id BIGINT NOT NULL REFERENCES locations(id) ON DELETE CASCADE ON UPDATE CASCADE,
  paid BOOL NOT NULL,
  participant_limit BIGINT NOT NULL,
  published_on TIMESTAMP,
  request_moderation BOOL NOT NULL,
  state VARCHAR(20) NOT NULL,
  title VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  pinned BOOL NOT NULL,
  title VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
  compilation_id BIGINT NOT NULL REFERENCES compilations(id) ON DELETE CASCADE ON UPDATE CASCADE,
  event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT COMPOSITE_KEY_COMPILATIONS_EVENTS PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS requests_for_events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE ON UPDATE CASCADE,
  requester_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
  status VARCHAR(20) NOT NULL
);
